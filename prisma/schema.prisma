generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://steven:b47054ii@localhost:3306/odsyst?connect_timeout=300"
}

model user_type {
  id                               Int     @id @default(autoincrement())
  type_name                        String? @db.VarChar(20)
  users_users_user_typeTouser_type users[] @relation("users_user_typeTouser_type")
}

model users {
  id                                   Int        @id @default(autoincrement())
  username                             String     @unique(map: "users_unique") @db.VarChar(255)
  userpassword                         String     @db.Text
  user_status                          Int?       @default(1) @db.SmallInt
  user_create_datetime                 DateTime?  @default(now()) @db.Timestamp(0)
  user_type                            Int?
  user_token                           String?    @db.LongText
  user_type_users_user_typeTouser_type user_type? @relation("users_user_typeTouser_type", fields: [user_type], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "users_user_type_FK")

  @@index([user_type], map: "users_user_type_FK")
}

model contracts {
  id                Int            @id @default(autoincrement())
  contract_number   String?        @db.VarChar(200)
  contract_type     Int            @default(1)
  contract_end_date DateTime?      @db.Date
  contract_status   Int?           @default(1) @db.SmallInt
  user_profile      user_profile[]
}

model departments {
  id           Int            @id @default(autoincrement())
  dept_name    String?        @db.VarChar(200)
  division_id  Int?
  divisions    divisions?     @relation(fields: [division_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "departments_divisions_FK")
  user_profile user_profile[]

  @@index([division_id], map: "departments_divisions_FK")
}

model divisions {
  id            Int            @id @default(autoincrement())
  group_id      Int?
  division_name String?        @db.VarChar(255)
  departments   departments[]
  groups        groups?        @relation(fields: [group_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "division_groups_FK")
  user_profile  user_profile[]

  @@index([group_id], map: "division_groups_FK")
}

model grades {
  id         Int     @id @default(autoincrement())
  grade_name String? @db.VarChar(20)
}

model groups {
  id           Int            @id @default(autoincrement())
  group_name   String?        @db.VarChar(255)
  divisions    divisions[]
  user_profile user_profile[]
}

model user_profile {
  id                   Int          @id @default(autoincrement())
  user_nama            String       @db.VarChar(100)
  user_phone           String?      @db.VarChar(20)
  user_email           String?      @db.VarChar(200)
  user_employee_number Int          @default(0)
  user_address         String?      @db.Text
  user_division        Int?
  user_group           Int?
  user_department      Int?
  user_grade           Int          @default(0)
  user_title           Int          @default(0)
  user_foto            String?      @db.VarChar(255)
  user_ispermanent     Int          @default(1) @db.SmallInt
  user_status          Int          @default(1) @db.SmallInt
  user_entrydate       DateTime?    @db.Date
  user_contract_id     Int?
  contracts            contracts?   @relation(fields: [user_contract_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "user_profile_contracts_FK")
  departments          departments? @relation(fields: [user_department], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "user_profile_departments_FK")
  divisions            divisions?   @relation(fields: [user_division], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "user_profile_divisions_FK")
  groups               groups?      @relation(fields: [user_group], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "user_profile_groups_FK")

  @@index([user_contract_id], map: "user_profile_contracts_FK")
  @@index([user_department], map: "user_profile_departments_FK")
  @@index([user_division], map: "user_profile_divisions_FK")
  @@index([user_group], map: "user_profile_groups_FK")
}
